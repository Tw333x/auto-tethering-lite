apply plugin: 'com.android.application'
apply plugin: 'jacoco-android'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.1'
    }
}

android {
    signingConfigs {
        release
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
        }
        coverage {
            debuggable true
            testCoverageEnabled = true
        }
    }

    compileSdkVersion 22
    buildToolsVersion '25.0.2'

    defaultConfig {
        applicationId "com.labs.dm.auto_tethering_lite"
        minSdkVersion 4
        maxSdkVersion 24
        targetSdkVersion 21
        versionCode 5
        versionName "0.0.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "java.util.Date", "buildTime", "new java.util.Date(" + getDateAsMillis() + "L)"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

}

static def getDateAsMillis() {
    def Calendar cal = Calendar.getInstance();
    return cal.getTimeInMillis().toString()
}

dependencies {
    //compile -->
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //testCompile -->
    //testCompile 'junit:junit:4.12'
    //testCompile 'org.mockito:mockito-core:1.10.19'
    //testCompile 'org.hamcrest:hamcrest-library:1.1'
    //testCompile 'org.robolectric:robolectric:3.1.2'
    //androidTestCompile -->
    //androidTestCompile 'com.android.support.test:runner:0.5'
    //androidTestCompile 'com.android.support.test:rules:0.5'
    //androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    //androidTestCompile 'org.mockito:mockito-core:1.10.19'
}

def Properties props = new Properties()
def propFile = new File(System.properties['user.home'] + '/.gradle/gradle.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('RELEASE_STORE_FILE') && props.containsKey('RELEASE_STORE_PASSWORD') &&
            props.containsKey('RELEASE_KEY_ALIAS') && props.containsKey('RELEASE_KEY_PASSWORD')) {
        println 'gradle.properties found at:  ' + propFile
        android.signingConfigs.release.with {
            storeFile = file(System.properties['user.home'] + '/.gradle/' + props['RELEASE_STORE_FILE'])
            storePassword = props['RELEASE_STORE_PASSWORD']
            keyAlias = props['RELEASE_KEY_ALIAS']
            keyPassword = props['RELEASE_KEY_PASSWORD']
        }
    } else {
        println 'gradle.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'gradle.properties not found'
    android.buildTypes.release.signingConfig = null
}

ext {
    ANDROID_BUILD_MIN_SDK_VERSION = 4
    ANDROID_BUILD_TARGET_SDK_VERSION = 25
    ANDROID_BUILD_TOOLS_VERSION = '25.0.2'
    ANDROID_BUILD_SDK_VERSION = 25
    SUPPORT_VERSION = '25.0.0'
    MAVEN_VERSION = '1.1.3'
}
